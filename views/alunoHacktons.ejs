<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Hacktons - Aluno</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
  <style>
    * { box-sizing: border-box; margin: 0; padding: 0; }
    body {
      font-family: 'Inter', sans-serif;
      background: #fffaf5;
      color: #222;
      height: 100vh;
      overflow: hidden;
    }
    .container {
      margin-left: 320px;
      padding: 40px;
      height: 100vh;
      overflow-y: auto;
    }
    h1 {
      font-size: 32px;
      color: #f57c00;
      margin-bottom: 20px;
    }
    section {
      margin-bottom: 40px;
    }
    section h2 {
      font-size: 24px;
      color: #f57c00;
      margin-bottom: 15px;
      border-bottom: 2px solid #ffd8b0;
      padding-bottom: 8px;
    }
    .hackton-card {
      background: #fff;
      border-radius: 16px;
      padding: 24px;
      margin-bottom: 24px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.06);
      transition: all 0.3s ease;
      border-left: 5px solid #f57c00;
    }
    .hackton-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 18px rgba(0,0,0,0.1);
    }
    .hackton-info {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 16px;
      margin-bottom: 16px;
    }
    .hackton-info p {
      display: flex;
      align-items: center;
      gap: 6px;
      font-size: 16px;
    }
    .status {
      font-weight: bold;
      color: #f57c00;
    }
    .actions {
      display: flex;
      gap: 12px;
      flex-wrap: wrap;
    }
    button, .btn {
      background-color: #f57c00;
      border: none;
      color: white;
      padding: 10px 20px;
      border-radius: 8px;
      font-weight: 600;
      font-size: 14px;
      cursor: pointer;
      transition: background 0.3s ease;
    }
    button:hover, .btn:hover {
      background-color: #e06b00;
    }
    button:disabled {
      background-color: #ddd;
      color: #555;
      cursor: not-allowed;
    }
    .modal, #modalFoto {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100vw;
      height: 100vh;
      background-color: rgba(0,0,0,0.4);
      justify-content: center;
      align-items: center;
    }
    .modal-content {
      background: white;
      padding: 30px;
      border-radius: 12px;
      width: 90%;
      max-width: 500px;
      position: relative;
    }
    .modal-content h3 {
      margin-top: 0;
      color: #f57c00;
    }
    .modal-content input[type="file"] {
      width: 100%;
      margin: 15px 0;
    }
    .modal-content .buttons {
      display: flex;
      gap: 10px;
      justify-content: flex-end;
    }
    .close-btn {
      position: absolute;
      top: 15px;
      right: 20px;
      font-size: 24px;
      cursor: pointer;
      color: #666;
    }
    #modalFoto img {
      max-width: 90vw;
      max-height: 90vh;
      border-radius: 12px;
      box-shadow: 0 0 20px rgba(0,0,0,0.6);
    }
    #modalFoto .close-btn {
      position: absolute;
      top: 25px;
      right: 40px;
      font-size: 28px;
      font-weight: bold;
      color: white;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <%- include('navbar/navbarAluno.ejs') %>
  <div class="container">

    <% function formatarData(dataStr) { const d = new Date(dataStr); return (`${String(d.getDate()).padStart(2,'0')}/${String(d.getMonth()+1).padStart(2,'0')}/${d.getFullYear()}`); } %>

    <section>
      <h2>Inscrito</h2>
      <% if (!emAndamento.length && !inscritosEmAberto.length) { %>
        <p>Voc√™ ainda n√£o est√° inscrito em nenhum hackton.</p>
      <% } %>
      <% emAndamento.concat(inscritosEmAberto).forEach(h => { %>
        <div class="hackton-card">
          <div class="hackton-info">
            <p>üè∑Ô∏è <strong>Nome:</strong> <%= h.nome %></p>
            <p>üìç <strong>Local:</strong> <%= h.local %></p>
            <p>üóì <strong>Per√≠odo:</strong> <%= formatarData(h.data_inicio) %> ‚Äì <%= formatarData(h.data_fim) %></p>
            <p>üìå <strong>Status:</strong> <span class="status"><%= h.statusExibido %></span></p>
          </div>
          <div class="actions">
            <% if (h.fotoEnviada && h.status !== 'Fechado' && (h.statusExibido === 'Em Andamento' || h.statusExibido === 'Finalizado')) { %>
              <button class="view-btn" data-hackton-id="<%= h.id_hackton %>">üì∑ Ver Foto</button>
              <button class="open-modal" data-hackton-id="<%= h.id_hackton %>">‚úèÔ∏è Editar Foto</button>
            <% } else if (h.fotoEnviada && h.status === 'Fechado') { %>
              <button class="view-btn" data-hackton-id="<%= h.id_hackton %>">üì∑ Ver Foto</button>
            <% } else if (h.status !== 'Fechado' && (h.statusExibido === 'Em Andamento' || h.statusExibido === 'Finalizado')) { %>
              <button class="open-modal" data-hackton-id="<%= h.id_hackton %>">üì§ Enviar Foto</button>
            <% } else { %>
              <button disabled>üö´ Nenhuma Foto Enviada</button>
            <% } %>
          </div>
        </div>
      <% }) %>
    </section>

    <section>
      <h2>Dispon√≠veis</h2>
      <% if (!emAberto.length) { %>
        <p>N√£o h√° hacktons dispon√≠veis para participar no momento.</p>
      <% } else { %>
        <% emAberto.forEach(h => { %>
          <div class="hackton-card">
            <div class="hackton-info">
              <p>üè∑Ô∏è <strong>Nome:</strong> <%= h.nome %></p>
              <p>üìç <strong>Local:</strong> <%= h.local %></p>
              <p>üóì <strong>Per√≠odo:</strong> <%= formatarData(h.data_inicio) %> ‚Äì <%= formatarData(h.data_fim) %></p>
              <p>üìå <strong>Status:</strong> <span class="status"><%= h.statusExibido %></span></p>
            </div>
            <div class="actions">
              <% if (h.inscrito) { %>
                <button disabled>‚úÖ Inscrito</button>
              <% } else { %>
                <form action="/participar/<%= h.id_hackton %>" method="POST">
                  <button type="submit">‚ûï Participar</button>
                </form>
              <% } %>
            </div>
          </div>
        <% }) %>
      <% } %>
    </section>

    <!-- Modal Foto Upload -->
    <div class="modal" id="uploadModal">
      <div class="modal-content">
        <span class="close-btn" onclick="closeModal()">√ó</span>
        <h3>Enviar Foto</h3>
        <form id="uploadForm" action="/enviar-foto" method="POST" enctype="multipart/form-data">
          <input type="hidden" name="id_hackton" id="hacktonId">
          <input type="file" name="foto" accept="image/*" required>
          <div class="buttons">
            <button type="submit">Enviar</button>
            <button type="button" onclick="closeModal()">Cancelar</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Modal Visualiza Foto -->
    <div id="modalFoto">
      <span class="close-btn" onclick="fecharModalFoto()">√ó</span>
      <img src="">
    </div>

    <script>
      const uploadModal = document.getElementById('uploadModal');
      const hacktonIdInput = document.getElementById('hacktonId');
      const modalFoto = document.getElementById('modalFoto');
      const modalImg = modalFoto.querySelector('img');

      document.querySelectorAll('.open-modal').forEach(btn => {
        btn.addEventListener('click', () => {
          hacktonIdInput.value = btn.getAttribute('data-hackton-id');
          uploadModal.style.display = 'flex';
        });
      });

      function closeModal() {
        uploadModal.style.display = 'none';
        hacktonIdInput.value = '';
      }

      document.querySelectorAll('.view-btn').forEach(btn => {
        btn.addEventListener('click', async () => {
          const hacktonId = btn.getAttribute('data-hackton-id');
          try {
            const response = await fetch(`/get-foto/${hacktonId}`);
            const data = await response.json();
            if (data.caminho) {
              modalImg.src = '/Uploads/' + data.caminho;
              modalFoto.style.display = 'flex';
            } else {
              alert('Nenhuma foto encontrada para este hackton.');
            }
          } catch (error) {
            console.error('Erro ao buscar foto:', error);
            alert('Erro ao carregar a foto.');
          }
        });
      });

      function fecharModalFoto() {
        modalFoto.style.display = 'none';
        modalImg.src = '';
      }
    </script>
  </div>
</body>
</html>
